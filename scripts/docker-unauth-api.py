#!/usr/bin/env python3
#descrption: POC to mass scan for unauthenticated docker daemon apis
# References: https://blog.csdn.net/qq_59350385/article/details/125485446
#author: joelczk

import argparse
import requests
import os

def cleanup():
    os.system("rm -rf vuln.txt")
    
def check_vulnerable(url):
    url = url + "/containers/json"
    try:
        r = requests.get(url)
        if r.status_code ==401:
            return False
        else:
            return True
    except:
        return False

def check_vulnerable_urls(file, port):
    ips = open(file).readlines()
    output_file = open("vuln.txt",'a')
    print("[+] Checking for urls vulnerable to unauthorized docker daemon api")
    for ip in ips:
        http_url = "http://" + ip.strip() + ":{port}".format(port=port)
        https_url = "https://" + ip.strip() + ":{port}".format(port=port)
        try:
            if (check_vulnerable(http_url) == True or check_vulnerable(https_url) == True):
                output_file.write(ip)
            else:
                continue
        except:
            pass
    print("[+] Vulnerable urls saved to vuln.txt")

def main(file, port):
    cleanup()
    check_vulnerable_urls(file, port)
    
if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('--file', help='File of IPs to be checked')
    parser.add_argument('--port', help="Port for docker api")
    args = parser.parse_args()
    main(args.file, args.port)
